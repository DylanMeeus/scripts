#!/bin/bash
#
# surfplank - set default browser via MIME
# Depends: xdg-utils libfile-mimeinfo-perl desktop-file-utils

# Disable globbing if it is not needed.
set -f 

if (( $UID == 0 )); then
	echo "This script should not be run as root."
	echo "See man xdg-mime."
	exit 1
fi

echo "Which default do you wish to set?"
select sptype in BROWSER EDITOR PDF; do
	break
done

# Browser MIME types. Adjust as needed.
if [[ $sptype == BROWSER ]]; then
mimes=(\
	x-scheme-handler/http \
	x-scheme-handler/https \
	x-scheme-handler/about \
	x-scheme-handler/ftp \
	x-scheme-handler/chrome \
	x-scheme-handler/unknown \
	application/x-extension-htm \
	application/x-extension-html \
	application/x-extension-shtml \
	application/xhtml+xml \
	application/x-extension-xhtml \
	application/x-extension-xht \
	text/html \
)
fi

# Editor MIME types.
if [[ $sptype == EDITOR ]]; then
mimes=(\
	text/plain \
	text/english \
	text/x-c \
	text/x-chdr \
	text/x-csrc \
	text/x-c++ \
	text/x-c++hdr \
	text/x-c++src \
	text/x-java \
	text/x-dsrc \
	text/x-moc \
	text/x-pascal \
	text/x-perl \
	text/x-python \
	text/x-makefile \
	text/x-tcl \
	text/x-text \
	application/x-php \
	application/x-httpd-php3 \
	application/x-httpd-php4 \
	application/x-httpd-php5 \
	application/xml \
	application/x-shellscript \
	text/css \
	text/x-sql \
	text/x-diff \
)
fi

# Functions. local variables are typically not used, so that they can be
# shared between functions.
base() {
	# select() is rather limited here.
	# TODO: Allow to exclude certain types
	echo "Choose the base MIME type:"
	select mime1 in "${mimes[@]}"; do
		spdef1="$(xdg-mime query default $mime1)"
		break
	done
	plank=${spdef1%.desktop}

	# System-wide MIME cache.
	# In this case, quotes prevent the array elements from being split.
	spstore+=($(grep $mime1\= /usr/share/applications/mimeinfo.cache \
	| sed 's/.*=//;s/;/\n/g;s/.desktop//g'))

	# XFCE uses exo
	if [[ $sptype == BROWSER ]]; then
		if [[ -f /usr/share/applications/exo-web-browser.desktop ]]; then
			spstore+=( exo-web-browser )
		fi
	fi
	
	# Custom desktop file
	spstore+=( '(custom)' )
}

# Different DEs and browsers set different or insufficient MIME types,
# so we compare them for consistency.
compare() {
	local st=0; local i=
	for i in "${spdefs[@]}"; do
		[[ $spdef1 = $i ]]
		st=$(( $? + st ))
	done

	if [[ $st = 0 ]]; then
		# Matching MIME types - default browser set.
		sperr=0
	else
		# Non-matching MIME types - default browser not set!
		sperr=1
	fi
}

surf() {
	# xdg-mime fails if this directory does not exist
	spath="~/.local/share/applications"
	if [[ -d $spath ]]; then
		# Only copy existing files
		if [[ -a $spath/mimeapps.list ]]; then
			cp $spath/mimeapps.list $spath/mimeapps.list.bak
		fi
	else
		mkdir -p $spath
	fi

	# Match the base MIME type.
	xdg-mime default $spdef1 "${mimes[@]}"

	# Some applications use defaults.list
	if [[ ! -a $spath/defaults.list ]]; then
		ln -s $spath/mimeapps.list $spath/defaults.list
	fi
	
	if [[ $sptype == BROWSER ]]; then
		# FIXME: sensible-browser (Debian) may ignore $BROWSER
		if ! grep ".bashrc.browser" ~/.bashrc --quiet; then
			echo "source ~/.bashrc.browser" >> ~/.bashrc
		fi

		# FIXME: .desktop prefix may not match $PATH
		echo "export BROWSER=$plank" > ~/.bashrc.browser

		# Compare default to x-www-browser alternative. If sensible-browser or
		# xdg-open are used, this is more informative than necessary.
		if [[ -x /usr/bin/x-www-browser ]]; then
			echo "The system browser is set to:"
			update-alternatives --query x-www-browser \
			| grep -e Name -e Status -e Value
			
			echo "The user browser is set to:"
			echo
			echo "$plank"
			echo
			echo "The system browser may be configured with:"
			echo "# update-alternatives --config x-www-browser"
			echo "In most cases this is unnecessary."
		fi
	fi
	
	if [[ $sptype == EDITOR ]]; then
		# TODO: If EDITOR is set to a GUI editor, it may be referred to
		# by console applications. This is not always expected behaviour.
		:
	fi
}

clean() {
	# TODO: Remove ~/.local/share/applications/*.desktop?
	:
}

change() {
	echo "Choose the default $sptype."
	select plank in "${spstore[@]}"; do
		if [[ $plank == '(custom)' ]]; then
			read -rp "Enter a .desktop (prefix) " plank
		fi
		spdef1=$plank.desktop
		break
	done
}

# ==
base
# ==

# TODO: In base(), use shift() instead of select() for 
# automatic checks. At least, if you then prevent setting 
# your FTP client or editor as default "browser" ...
while [[ $spdef1 == "" ]]; do
	echo "No default set."
	echo
	change
done

# xdg-mime can only reliably query one type at a time.
spdefs=()
for m in "${mimes[@]}"; do
	# Quoting! Otherwise blank elements are disregarded,
	# thus not matching select() in base().
	spdefs+=("$(xdg-mime query default $m)")
done

# =====
compare
# =====

if [[ $sperr = 0 ]]; then
	echo "The registered $sptype is $plank."
	echo 'Press "c" to change, or any other key to quit.'
	echo
	read -r -n1 q2

	case "$q2" in
		[cC])
			change && surf
			;;
		*)
			exit
			;;
	esac

else
	echo "The registered $sptype is $plank, but is not consistent across MIME types."
	echo -'Press "y" to correct, "c" to change, or any other key to quit.'
	echo
	read -r -n1 q3

	case "$q3" in
		[yY])
			surf
			;;
		[cC])
			change && surf
			;;
		*)
			exit
			;;
	esac
fi
