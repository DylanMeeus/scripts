#!/bin/bash
#
# surfplank - set default browser via MIME (Debian)
# Depends: xdg-utils libfile-mimeinfo-perl

# Disable globbing if it is not needed.
set -f 

if (( $UID == 0 )); then
	echo "This script should not be run as root."
	echo "See man xdg-mime."
	exit 1
fi

# Browser MIME types. Adjust as needed.
mimes=(\
	x-scheme-handler/http \
	x-scheme-handler/https \
	x-scheme-handler/about \
	x-scheme-handler/ftp \
	x-scheme-handler/chrome \
	x-scheme-handler/unknown \
	application/x-extension-htm \
	application/x-extension-html \
	application/x-extension-shtml \
	application/xhtml+xml \
	application/x-extension-xhtml \
	application/x-extension-xht \
	text/html \
)

base() {
	# select() is rather limited here.
	# TODO: Allow to exclude certain types
	echo "Choose the base MIME type to compare against:"
	select mime1 in "${mimes[@]}"; do
		spdef1="$(xdg-mime query default $mime1)"
		break
	done
	plank=${spdef1%.desktop}

	# System-wide MIME cache.
	# TODO: user cache
	spstore=("$(grep $mime1\= /usr/share/applications/mimeinfo.cache \
	| sed 's/.*=//;s/;/\n/g;s/.desktop//g')")
}

# Different DEs and browsers set different or insufficient MIME types,
# so we compare them for consistency.
compare() {
	local st=0; local i=
	for i in "${spdefs[@]}"; do
		[[ $spdef1 = $i ]]
		st=$(( $? + st ))
	done

	if [[ $st = 0 ]]; then
		# Matching MIME types - default browser set.
		sperr=0
	else
		# Non-matching MIME types - default browser not set!
		sperr=1
	fi
}

surf() {
	# xdg-mime fails if this directory does not exist
	if [[ -d ~/.local/share/applications ]]; then
		cd ~/.local/share/applications
		# Only copy existing files
		if [[ -a mimeapps.list ]]; then
			cp mimeapps.list mimeapps.list.bak
		fi
	else
		mkdir -p ~/.local/share/applications
	fi

	# Match the base MIME type.
	xdg-mime default $spdef1 "${mimes[@]}"

	# FIXME: sensible-browser (Debian) may ignore $BROWSER
	if ! grep ".bashrc.browser" ~/.bashrc --quiet; then
		echo "source ~/.bashrc.browser" >> ~/.bashrc
	fi

	# FIXME: .desktop prefix may not match $PATH
	echo "export BROWSER=$plank" > ~/.bashrc.browser

	# Compare default to x-www-browser alternative. If sensible-browser or
	# xdg-open are used, this is more informative than necessary.
	if [[ -x /usr/bin/x-www-browser ]]; then
		echo "The system browser is set to:"
		update-alternatives --query x-www-browser \
		| grep -e Name -e Status -e Value
		
		echo -e "\nThe user browser is set to:"
		echo -e "$plank\n"
		echo "The system browser may be configured with:"
		echo "# update-alternatives --config x-www-browser"
		echo "In most cases this is unnecessary."
	fi
}

clean() {
	# TODO: Remove ~/.local/share/applications/browser*.desktop?
	:
}

change() {
	echo "Choose the default browser"
	select plank in "${spstore[@]}"; do
		spdef1=$plank.desktop
		break
	done
}

# ==
base
# ==

# TODO: In base(), use shift() instead of select() for 
# automatic checks. At least, if you then prevent setting 
# your FTP client or editor as default "browser" ...
while [[ $spdef1 == "" ]]; do
	echo "This type is not yet registered."
	echo -e "Choose a different one.\n"
	base
done

# xdg-mime can only reliably query one type at a time.
spdefs=()
for m in "${mimes[@]}"; do
	# Quoting! Otherwise blank elements are disregarded,
	# thus not matching select() in base().
	spdefs+=("$(xdg-mime query default $m)")
done

# =====
compare
# =====

if [[ $sperr = 0 ]]; then
	echo "The registered browser is $plank."
	echo -e 'Press "c" to change, or any other key to quit.\n'
	read -r -n1 q2

	case "$q2" in
		[cC])
			change && surf
			;;
		*)
			exit
			;;
	esac

else
	echo "The registered browser is $plank, but is not consistent across MIME types."
	echo -e 'Press "y" to correct, "c" to change, or any other key to quit.\n'
	read -r -n1 q3

	case "$q3" in
		[yY])
			surf
			;;
		[cC])
			change && surf
			;;
		*)
			exit
			;;
	esac
fi
